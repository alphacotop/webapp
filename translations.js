const translations = {
    "ko": {
        "main_title": "AI-EDU-KIT for MCU",
        "main_subtitle": "영상처리 인공지능을 활용해 하드웨어를 제어하는 멋진 경험을 해보세요.",
        "main_description": "마이크로비트, 아두이노, ESP32, RP 피코를 유선과 무선으로 연결해 제어할 수 있어요.",
        "tm_title": "TM 올인원 서비스",
        "tm_description": "Teachable Machine으로 학습한 이미지, 포즈, 음성 모델을 사용하여 MCU를 제어합니다.",
        "face_title": "얼굴 인식 올인원 서비스",
        "face_description": "MediaPipe 미간 좌표, 하품, 눈 깜박임, 얼굴 개수, 크기 등을 사용하여 MCU를 제어합니다.",
        "hand_title": "손가락인식 올인원 서비스",
        "hand_description": "MediaPipe로 검지좌표, 엄지-검지 길이, 손가락 카운팅 등을 사용하여 MCU를 제어합니다.",
        "service4_title": "서비스 4",
        "service4_description": "다양한 아이디어를 바탕으로 한 멋진 기능을 준비하고 있습니다.",
        "go_to_service": "서비스 바로가기",
        "coming_soon": "개발중",
        "admin_log_button": "🔒 관리자 로그",
        "download_csv_button": "📄 CSV 다운로드",
        "admin_log_title": "관리자 방문자 로그",
        "footer_copyright": "&copy; 2025 AI-EDU-KIT. All Rights Reserved.",
        "footer_developed_by": "Developed by Seok-jeon Kim : alphaco@kakao.com",
        "visitors_total": "방문자:",
        "visitors_today": "오늘:",
        "visitors_unique": "순방문자:",
        "tm_page_title": "🤖 TM All-in-One for MCU",
        "tm_page_subtitle": "<a href='https://teachablemachine.withgoogle.com/' target='_blank' class='text-blue-600 underline'><b>Teachable Machine</b></a> 통합 인터페이스 - 이미지, 포즈, 음성 인식",
        "tab_image": "📷 이미지 인식",
        "tab_pose": "🏃 포즈 인식",
        "tab_voice": "🎤 음성 인식",
        "image_model_settings": "📷 이미지 모델 설정",
        "pose_model_settings": "🏃 포즈 모델 설정",
        "voice_model_settings": "🎤 음성 모델 설정",
        "tm_model_url_image": "Teachable Machine 이미지 모델 URL",
        "tm_model_url_pose": "Teachable Machine 포즈 모델 URL",
        "tm_model_url_voice": "Teachable Machine 음성 모델 URL",
        "threshold": "인식 임계값 (0-100)",
        "load_model": "모델 로드",
        "start": "시작",
        "stop": "정지",
        "start_voice": "음성 인식 시작",
        "connection_settings": "🔌 연결 설정",
        "webcam_select": "웹캠 선택",
        "ble_device_type": "블루투스 장치 유형",
        "microbit_device": "마이크로비트 (이름으로 검색)",
        "generic_uart_device": "일반 UART 장치 (Arduino, ESP32 등)",
        "serial_connect": "시리얼 연결",
        "serial_disconnect": "해제",
        "ble_connect": "블루투스 연결",
        "ble_disconnect": "해제",
        "status_disconnected": "연결 안됨",
        "status_waiting": "대기 중...",
        "usage_guide": "💡 사용 방법",
        "guide_tm_1": "사용할 인식 모드(이미지/포즈/음성)를 선택하세요.",
        "guide_tm_2": "Teachable Machine에서 학습한 모델 URL을 입력하세요.",
        "guide_tm_3": "연결할 장치(시리얼 또는 블루투스)를 선택하고 연결하세요.",
        "guide_tm_4": "모델을 로드하고 시작 버튼을 누르세요.",
        "guide_tm_5": "인식된 결과가 자동으로 MCU로 전송됩니다.",
        "developer_info": "👨‍💻 개발자 정보",
        "developer_name": ".",
        "app_description_1": "WebSerial과 WebBLE를 이용해 TM 결과물을 유/무선 MCU로 전송하는 로컬 웹앱입니다.",
        "app_description_2": "아두이노, 마이크로비트, ESP32, 라즈베리파이 피코 등 모든 MCU를 사용할 수 있습니다.",
        "app_description_3": "Chrome, Edge 브라우저에서 테스트 되었습니다. 하드웨어는 블록코딩이나 텍스트 코딩을 이용해 사전 코드 업로드가 필요합니다.",
        "app_description_4": "아두이노의 전송 데이터는 문자열이므로 아스키코드로 변환해야 합니다.",
        "app_description_5": "다양한 출력장치를 연결하여 AIoT 애플리케이션을 제작해 보세요.",
        "ccl": "CCL: BY-NC-ND",
        "no_webcam": "연결된 웹캠이 없습니다.",
        "webcam_permission": "웹캠 접근 권한이 필요합니다.",
        "webcam_changed": "웹캠이 {webcamName}(으)로 변경되었습니다.",
        "enter_model_url": "{modelType} 모델 URL을 입력하세요",
        "model_loaded": "{modelType} 모델 로드 완료",
        "model_load_failed": "모델 로드 실패: {error}",
        "voice_recognition_started": "음성 인식 시작",
        "serial_connect_failed": "시리얼 연결 실패: {error}",
        "ble_connect_failed": "블루투스 연결 실패: {error}",
        "ble_connect_success": "블루투스 연결 성공!",
        "status_connected": "{connectionType} 연결됨",
        "context_menu_blocked": "소스 보기는 금지되어 있습니다.",
        "recognition_result": "인식: {result}",
        "face_page_title": "😀 얼굴 인식 올인원",
        "face_page_subtitle": "MediaPipe의 얼굴 인식 기술을 활용한 다양한 기능을 제공합니다.",
        "tab_face_coords": "📍 미간 좌표",
        "tab_yawn": "👄 하품 감지",
        "tab_blink": "👁️ 눈 깜박임",
        "tab_face_count": "👨‍👩‍👧‍👦 얼굴 개수",
        "tab_face_size": "📏 얼굴 크기",
        "tab_face_service6": "✨ 서비스 6",
        "start_recognition": "인식 시작",
        "glabella_coords": "미간 중심 좌표",
        "mouth_open_size": "입 벌림 크기",
        "blink_status": "눈 깜박임 상태 (1: 깜박임, 0: 평상시)",
        "left_eye": "왼쪽:",
        "right_eye": "오른쪽:",
        "both_eyes": "양쪽:",
        "detected_face_count": "감지된 얼굴 개수",
        "face_box_size": "얼굴 상자 크기 (너비, 높이)",
        "unit_faces": "개",
        "guide_face_1": "상단 탭에서 원하는 얼굴 인식 기능을 선택하세요.",
        "guide_face_2": "'인식 시작' 버튼을 클릭하여 카메라를 활성화하세요.",
        "guide_face_3": "MCU 장치를 시리얼 또는 블루투스로 연결하세요.",
        "guide_face_4": "얼굴이 인식되면 실시간으로 데이터가 MCU로 전송됩니다.",
        "guide_face_5": "MCU에서 수신한 데이터를 활용하여 다양한 출력장치를 제어하세요.",
        "developer_info_face": "WebSerial과 WebBLE를 이용해 페이스매시 결과를 유/무선으로 MCU에 전송하는 로컬 웹앱입니다.",
        "loading_model": "모델 로딩 중...",
        "recognizing": "인식 중...",
        "serial_connect_error": "시리얼 연결 실패: {error}",
        "ble_connect_error": "블루투스 연결 실패: {error}",

        // ▼▼▼ HAND 페이지용 번역 추가 ▼▼▼
        "hand_page_title": "✋ 손가락 인식 올인원",
        "hand_page_subtitle": "MediaPipe의 손 인식 기술을 활용한 다양한 기능을 제공합니다.",
        "tab_hand_coords": "👆 검지좌표",
        "tab_thumb_dist": "📏 엄지-검지 길이",
        "tab_finger_count": "🖐️ 손가락 카운팅",
        "tab_dual_coords": "✌️ 양손 검지좌표",
        "tab_hand_service5": "✨ 서비스 5",
        "tab_hand_service6": "✨ 서비스 6",
        "index_finger_coords": "검지 끝 좌표",
        "thumb_index_dist": "엄지-검지 사이 거리",
        "finger_count": "편 손가락 개수",
        "unit_fingers": "개",
        "dual_hand_coords": "양손 검지 좌표",
        "guide_hand_1": "상단 탭에서 원하는 손 인식 기능을 선택하세요.",
        "guide_hand_2": "'인식 시작' 버튼을 클릭하여 카메라를 활성화하세요.",
        "guide_hand_3": "MCU 장치를 시리얼 또는 블루투스로 연결하세요.",
        "guide_hand_4": "손이 인식되면 실시간으로 데이터가 MCU로 전송됩니다.",
        "guide_hand_5": "MCU에서 수신한 데이터를 활용하여 다양한 출력장치를 제어하세요.",
        "developer_info_hand": "WebSerial과 WebBLE를 이용해 손가락 랜드마크 결과를 유/무선으로 MCU에 전송하는 로컬 웹앱입니다."
    },
    "en": {
        "main_title": "AI-EDU-KIT for MCU",
        "main_subtitle": "Have a wonderful experience controlling hardware using video processing AI.",
        "main_description": "You can control Micro:bit, Arduino, ESP32, and RP Pico via wired and wireless connections.",
        "tm_title": "TM All-in-One Service",
        "tm_description": "Control your MCU using image, pose, and sound models trained with Teachable Machine.",
        "face_title": "Face Recognition All-in-One",
        "face_description": "Control your MCU using MediaPipe's glabella coordinates, yawning, blinking, face count, size, and more.",
        "hand_title": "Hand Recognition All-in-One Service",
        "hand_description": "Control MCUs using MediaPipe for index finger coordinates, thumb-index length, finger counting, and dual-hand index coordinates.",
        "service4_title": "Service 4",
        "service4_description": "We are preparing a great feature based on various ideas.",
        "go_to_service": "Go to Service",
        "coming_soon": "Coming Soon",
        "admin_log_button": "🔒 Admin Log",
        "download_csv_button": "📄 Download CSV",
        "admin_log_title": "Admin Visitor Log",
        "footer_copyright": "&copy; 2025 AI-EDU-KIT. All Rights Reserved.",
        "footer_developed_by": "Developed by Seok-jeon Kim : alphaco@kakao.com",
        "visitors_total": "Total:",
        "visitors_today": "Today:",
        "visitors_unique": "Unique:",
        "tm_page_title": "🤖 TM All-in-One for MCU",
        "tm_page_subtitle": "Integrated interface for <a href='https://teachablemachine.withgoogle.com/' target='_blank' class='text-blue-600 underline'><b>Teachable Machine</b></a> - Image, Pose, and Sound Recognition",
        "tab_image": "📷 Image",
        "tab_pose": "🏃 Pose",
        "tab_voice": "🎤 Sound",
        "image_model_settings": "📷 Image Model Settings",
        "pose_model_settings": "🏃 Pose Model Settings",
        "voice_model_settings": "🎤 Sound Model Settings",
        "tm_model_url_image": "Teachable Machine Image Model URL",
        "tm_model_url_pose": "Teachable Machine Pose Model URL",
        "tm_model_url_voice": "Teachable Machine Sound Model URL",
        "threshold": "Recognition Threshold (0-100)",
        "load_model": "Load Model",
        "start": "Start",
        "stop": "Stop",
        "start_voice": "Start Sound Recognition",
        "connection_settings": "🔌 Connection Settings",
        "webcam_select": "Select Webcam",
        "ble_device_type": "Bluetooth Device Type",
        "microbit_device": "Micro:bit (Search by name)",
        "generic_uart_device": "Generic UART Device (Arduino, ESP32, etc.)",
        "serial_connect": "Connect Serial",
        "serial_disconnect": "Disconnect",
        "ble_connect": "Connect Bluetooth",
        "ble_disconnect": "Disconnect",
        "status_disconnected": "Not Connected",
        "status_waiting": "Waiting...",
        "usage_guide": "💡 How to Use",
        "guide_tm_1": "Select the recognition mode to use (Image/Pose/Sound).",
        "guide_tm_2": "Enter the model URL trained in Teachable Machine.",
        "guide_tm_3": "Select and connect the device (Serial or Bluetooth).",
        "guide_tm_4": "Load the model and press the Start button.",
        "guide_tm_5": "The recognized result is automatically sent to the MCU.",
        "developer_info": "👨‍💻 Developer Information",
        "developer_name": "Seok-jeon Kim, Teacher at Songdo Middle School / Adjunct Professor at Inha University. since 2023.04.24. alphaco@kakao.com",
        "app_description_1": "A local web app that sends TM results to wired/wireless MCUs using WebSerial and WebBLE.",
        "app_description_2": "All MCUs such as Arduino, Micro:bit, ESP32, Raspberry Pi Pico can be used.",
        "app_description_3": "Tested in Chrome and Edge browsers. Hardware requires prior code upload using block or text coding.",
        "app_description_4": "The transmission data of Arduino is a string, so it must be converted to ASCII code.",
        "app_description_5": "Create AIoT applications by connecting various output devices.",
        "ccl": "CCL: BY-NC-ND",
        "no_webcam": "No webcams are connected.",
        "webcam_permission": "Webcam access permission is required.",
        "webcam_changed": "Webcam changed to {webcamName}.",
        "enter_model_url": "Please enter the {modelType} model URL",
        "model_loaded": "{modelType} model loaded successfully",
        "model_load_failed": "Model load failed: {error}",
        "voice_recognition_started": "Sound recognition started",
        "serial_connect_failed": "Serial connection failed: {error}",
        "ble_connect_failed": "Bluetooth connection failed: {error}",
        "ble_connect_success": "Bluetooth connected successfully!",
        "status_connected": "{connectionType} connected",
        "context_menu_blocked": "Viewing source is prohibited.",
        "recognition_result": "Recognition: {result}",
        "face_page_title": "😀 Face Recognition All-in-One",
        "face_page_subtitle": "Provides various functions utilizing MediaPipe's face recognition technology.",
        "tab_face_coords": "📍 Glabella Coords",
        "tab_yawn": "👄 Yawn Detection",
        "tab_blink": "👁️ Blink Detection",
        "tab_face_count": "👨‍👩‍👧‍👦 Face Count",
        "tab_face_size": "📏 Face Size",
        "tab_face_service6": "✨ Service 6",
        "start_recognition": "Start Recognition",
        "glabella_coords": "Glabella Center Coordinates",
        "mouth_open_size": "Mouth Open Size",
        "blink_status": "Blink Status (1: Blink, 0: Normal)",
        "left_eye": "Left:",
        "right_eye": "Right:",
        "both_eyes": "Both:",
        "detected_face_count": "Detected Face Count",
        "face_box_size": "Face Box Size (Width, Height)",
        "unit_faces": "faces",
        "guide_face_1": "Select the desired face recognition function from the top tab.",
        "guide_face_2": "Click the 'Start Recognition' button to activate the camera.",
        "guide_face_3": "Connect your MCU device via Serial or Bluetooth.",
        "guide_face_4": "When a face is recognized, data is sent to the MCU in real-time.",
        "guide_face_5": "Utilize the received data on the MCU to control various output devices.",
        "developer_info_face": "A local web app that sends face mesh results to wired/wireless MCUs using WebSerial and WebBLE.",
        "loading_model": "Loading model...",
        "recognizing": "Recognizing...",
        "serial_connect_error": "Serial connection failed: {error}",
        "ble_connect_error": "Bluetooth connection failed: {error}",

        // ▼▼▼ Additions for HAND Page ▼▼▼
        "hand_page_title": "✋ Hand Recognition All-in-One",
        "hand_page_subtitle": "Provides various functions utilizing MediaPipe's hand recognition technology.",
        "tab_hand_coords": "👆 Index Coords",
        "tab_thumb_dist": "📏 Thumb-Index Dist",
        "tab_finger_count": "🖐️ Finger Counting",
        "tab_dual_coords": "✌️ Dual Hand Coords",
        "tab_hand_service5": "✨ Service 5",
        "tab_hand_service6": "✨ Service 6",
        "index_finger_coords": "Index Finger Tip Coordinates",
        "thumb_index_dist": "Distance between Thumb and Index",
        "finger_count": "Number of Extended Fingers",
        "unit_fingers": "fingers",
        "dual_hand_coords": "Dual Hand Index Coordinates",
        "guide_hand_1": "Select the desired hand recognition function from the top tab.",
        "guide_hand_2": "Click the 'Start Recognition' button to activate the camera.",
        "guide_hand_3": "Connect your MCU device via Serial or Bluetooth.",
        "guide_hand_4": "When a hand is recognized, data is sent to the MCU in real-time.",
        "guide_hand_5": "Utilize the received data on the MCU to control various output devices.",
        "developer_info_hand": "A local web app that sends hand landmark results to wired/wireless MCUs using WebSerial and WebBLE."
    }
};

let currentLanguage = 'ko';

function _t(key, replacements = {}) {
    let lang = currentLanguage;
    if (!translations[lang]) {
        lang = 'ko'; // Fallback to Korean
    }
    let text = translations[lang][key] || translations['ko'][key] || key;
    if (text) { 
        for (const placeholder in replacements) {
            text = text.replace(`{${placeholder}}`, replacements[placeholder]);
        }
    }
    return text;
}

function setLanguage() {
    const lang = navigator.language.split('-')[0];
    currentLanguage = translations[lang] ? lang : 'ko';

    document.querySelectorAll('[data-translate-key]').forEach(el => {
        const key = el.getAttribute('data-translate-key');
        const translatedText = _t(key);
        
        if (el.tagName === 'INPUT' || el.tagName === 'TEXTAREA') {
            if(el.placeholder) el.placeholder = translatedText;
        } else if (key.includes('subtitle') || key.includes('copyright')) {
             el.innerHTML = translatedText;
        } else {
            el.innerText = translatedText;
        }
    });
}

document.addEventListener('DOMContentLoaded', setLanguage);